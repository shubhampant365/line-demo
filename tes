<template>
    <lightning-card title="Work Order">
        <template if:true={isRelevantBusinessUnit}>
            <c-asset-onboarding-screen record-id={recordId}></c-asset-onboarding-screen>
        </template>
        <template if:false={isRelevantBusinessUnit}>
            <c-asset-onboard-no-scan record-id={recordId}></c-asset-onboard-no-scan>
        </template>
    </lightning-card>
</template>



import { LightningElement, api, wire, track } from 'lwc';
import { getRecord } from 'lightning/uiRecordApi';
import WORKORDER_FIELD from '@salesforce/schema/WorkOrderLineItem.WorkOrderId';
import BUSINESS_UNIT_FIELD from '@salesforce/schema/WorkOrder.Business_Unit__c';

const WORKORDERLINEITEM_FIELDS = [WORKORDER_FIELD];
const WORKORDER_FIELDS = [BUSINESS_UNIT_FIELD];

export default class AssetOnboardingParent extends LightningElement {
    @api recordId;  // This will be the ID of the WorkOrderLineItem
    @track workOrderId;  // ID of the WorkOrder parent
    @track businessUnit;

    @wire(getRecord, { recordId: '$recordId', fields: WORKORDERLINEITEM_FIELDS })
    loadWorkOrderId({ error, data }) {
        if (error) {
            console.error('Error loading WorkOrderLineItem:', error);
        } else if (data) {
            this.workOrderId = data.fields.WorkOrderId.value;
        }
    }

    @wire(getRecord, { recordId: '$workOrderId', fields: WORKORDER_FIELDS })
    loadBusinessUnit({ error, data }) {
        if (error) {
            console.error('Error loading WorkOrder:', error);
        } else if (data) {
            this.businessUnit = data.fields.Business_Unit__c.value;
        }
    }

    get isRelevantBusinessUnit() {
        return this.businessUnit === 'Locks' || this.businessUnit === 'Appliances';
    }
}
